[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10/Hands-on_Ex10.html",
    "href": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10/Hands-on_Ex10.html",
    "title": "Hands-on_Ex10",
    "section": "",
    "text": "pacman::p_load(lubridate, tidyquant, ggHoriPlot,\n               timetk, ggthemes, plotly, tidyverse)\n\n\ncompany <- read_csv(\"data/companySG.csv\")\n\nNew names:\nRows: 46 Columns: 7\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(3): Name, symbol, country dbl (4): ...1, Rank, marketcap, price..USD.\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n\nTop40 <- company %>% \n  slice_max(`marketcap`, n=40) %>% \n  select(symbol)\n\n\nStock40_daily <- Top40 %>%\n  tq_get(get = \"stock.prices\", \n         from = \"2020-01-01\", \n         to = \"2022-03-31\") %>%\n  group_by(symbol) %>%\n  tq_transmute(select = NULL, \n               mutate_fun = to.period, \n               period  = \"days\")\n\nWarning: x = 'RW0U.SI', get = 'stock.prices': Error in getSymbols.yahoo(Symbols = \"RW0U.SI\", env = <environment>, verbose = FALSE, : Unable to import \"RW0U.SI\".\nRW0U.SI download failed after two attempts. Error message:\nHTTP error 404.\n Removing RW0U.SI.\n\n\n\nStock40_daily %>% \n  ggplot() +\n  geom_horizon(aes(x = date, y=adjusted), origin = \"midpoint\", horizonscale = 6)+\n  facet_grid(symbol~.)+\n  theme_few() +\n  scale_fill_hcl(palette = 'RdBu') +\n  theme(panel.spacing.y=unit(0, \"lines\"), strip.text.y = element_text(\n    size = 5, angle = 0, hjust = 0),\n    legend.position = 'none',\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(size=7),\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank()\n    ) +\n  scale_x_date(expand=c(0,0), date_breaks = \"1 month\", date_labels = \"%b%y\") +\n  ggtitle('Daily Adjusted Prices (Jan 2020 to Mar 2022)') \n\nWarning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` in the `default_aes` field and elsewhere instead.\n\n\n\n\n\n\nStock40_daily <- Stock40_daily %>%\n  left_join(company) %>%\n  select(1:8, 11:12)\n\nJoining, by = \"symbol\"\n\n\n\nStock40_daily %>% \n  ggplot() +\n  geom_horizon(aes(x = date, y=adjusted), origin = \"midpoint\", horizonscale = 6)+\n  facet_grid(Name~.)+ #<<\n  geom_vline(xintercept = as.Date(\"2020-03-11\"), colour = \"grey15\", linetype = \"dashed\", size = 0.5)+ #<<\n  geom_vline(xintercept = as.Date(\"2020-12-14\"), colour = \"grey15\", linetype = \"dashed\", size = 0.5)+ #<<\n  theme_few() +\n  scale_fill_hcl(palette = 'RdBu') +\n  theme(panel.spacing.y=unit(0, \"lines\"),\n        strip.text.y = element_text(size = 5, angle = 0, hjust = 0),\n    legend.position = 'none',\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(size=7),\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank()\n    ) +\n  scale_x_date(expand=c(0,0), date_breaks = \"1 month\", date_labels = \"%b%y\") +\n  ggtitle('Daily Adjusted Prices (Jan 2020 to Mar 2022)') \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\nStock40_daily %>%\n  filter(symbol == \"DBSDF\") %>%\n  ggplot(aes(x = date, y = close)) +\n    geom_line() +\n    labs(title = \"DBS Group Holdings Ltd (DBSDF) Daily Stock Price\", \n         y = \"Closing Price\", x = \"\") + \n    theme_tq()\n\n\n\n\n\nselected_stocks <-  Stock40_daily %>%\n  filter (`symbol` == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"))\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\nWarning in symbol == c(\"C09.SI\", \"SINGF\", \"SNGNF\", \"C52.SI\"): longer object\nlength is not a multiple of shorter object length\n\n\n\np <- ggplot(selected_stocks, \n            aes(x = date, y = adjusted)) + \n  scale_y_continuous() +\n  geom_line() +\n  facet_wrap(~Name, scales = \"free_y\",) +\n  theme_tq() +\n  labs(title = \"Daily stock prices of selected weak stocks\", \n       x = \"\", y = \"Adjusted Price\") + \n  theme(axis.text.x = element_text(size = 6), \n        axis.text.y = element_text(size = 6))\n\nggplotly(p)\n\n\n\n\n\n\nend <- as_date(\"2022-03-31\")\n\n\nStock40_daily %>%\n  filter(symbol == \"DBSDF\") %>%\n  ggplot(aes(\n    x = date, y = close)) +\n  geom_candlestick(aes(\n    open = open, high = high, \n    low = low, close = close)) +\n  geom_line(size = 0.5)+\n    coord_x_date(xlim = c(end - weeks(12), \n                          end),\n                 ylim = c(20, 35),\n                 expand = TRUE) +\n  labs(title = \"DBS Group Holdings Ltd (DBSDF) Daily Stock Price\", \n       y = \"Closing Price\", x = \"\") + \n  theme_tq()\n\nWarning: The following aesthetics were dropped during statistical transformation: open,\nhigh, low, close, y\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\nWarning: The following aesthetics were dropped during statistical transformation: x,\nopen, high, low, close, y\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\n\nStock40_daily %>%\n  filter(symbol == \"DBSDF\") %>%\n  ggplot(aes(\n    x = date, y = close)) +\n  geom_candlestick(aes(\n    open = open, high = high, \n    low = low, close = close)) +\n  geom_line(size = 0.5)+\n  geom_ma(color = \"darkgreen\", n = 20) +\n  geom_ma(color = \"lightgreen\", n = 5) + \n    coord_x_date(xlim = c(end - weeks(12), \n                          end),\n                 ylim = c(20, 35),\n                 expand = TRUE) +\n  labs(title = \"DBS Group Holdings Ltd (DBSDF) Daily Stock Price\",\n       subtitle = \"darkgreen = 1-day MA, lightgreen = 5-day MA\",\n       y = \"Closing Price\", x = \"\") + \n  theme_tq()\n\nWarning: The following aesthetics were dropped during statistical transformation: open,\nhigh, low, close, y\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\nWarning: The following aesthetics were dropped during statistical transformation: x,\nopen, high, low, close, y\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\n\nStock40_daily %>%\n  filter(symbol == \"DBSDF\") %>% \n  ggplot(aes(x=date, y=close))+\n  geom_line(size=0.5)+\n  geom_bbands(aes(\n    high = high, low = low, close = close), \n    ma_fun = SMA, sd = 2, n = 20,\n    size = 0.75, color_ma = \"royalblue4\", \n    color_bands = \"red1\")+\n    coord_x_date(xlim = c(\"2020-02-01\", \n                          \"2022-03-31\"), \n                 expand = TRUE)+\n    labs(title = \"DBS Group Holdings Ltd (DBSDF) Daily Stock Price\",\n         subtitle = \"dotted red lines = bollinger bands\",\n         x = \"Date\", y =\"Price\") +\ntheme(legend.position=\"none\")\n\nWarning: The following aesthetics were dropped during statistical transformation: high,\nlow, close, y\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\nWarning: The following aesthetics were dropped during statistical transformation: high,\nlow, close\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\n\ncandleStick_plot<-function(symbol, from, to){\n  tq_get(symbol, from = from, to = to, warnings = FALSE) %>% \n    mutate(greenRed=ifelse(open-close>0, \"Red\", \"Green\")) %>% \n    ggplot()+\n    geom_segment(\n      aes(x = date, xend=date, y =open, yend =close, colour=greenRed), \n      size=3)+\n    theme_tq()+\n    geom_segment(\n      aes(x = date, xend=date, y =high, yend =low, colour=greenRed))+\n    scale_color_manual(values=c(\"ForestGreen\",\"Red\"))+\n    ggtitle(paste0(symbol,\" (\",from,\" - \",to,\")\"))+\n    theme(legend.position =\"none\",\n          axis.title.y = element_blank(),\n          axis.title.x=element_blank(),\n          axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),\n          plot.title= element_text(hjust=0.5))\n}\n\n\np <- candleStick_plot(\"DBSDF\",\n                      from = '2022-01-01',\n                      to = today())\nggplotly(p)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "title": "Hands-on Exercise 7",
    "section": "",
    "text": "pacman::p_load(tmap, tidyverse, sf)\nsgpools <- read_csv(\"data/SGPools_svy21.csv\")\n\nRows: 306 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): NAME, ADDRESS, OUTLET TYPE\ndbl (4): POSTCODE, XCOORD, YCOORD, Gp1Gp2 Winnings\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(sgpools)\n\n# A tibble: 6 × 7\n  NAME                             ADDRESS POSTC…¹ XCOORD YCOORD OUTLE…² Gp1Gp…³\n  <chr>                            <chr>     <dbl>  <dbl>  <dbl> <chr>     <dbl>\n1 Livewire (Marina Bay Sands)      2 Bayf…   18972 30842. 29599. Branch        5\n2 Livewire (Resorts World Sentosa) 26 Sen…   98138 26704. 26526. Branch       11\n3 SportsBuzz (Kranji)              Lotus …  738078 20118. 44888. Branch        0\n4 SportsBuzz (PoMo)                1 Sele…  188306 29777. 31382. Branch       44\n5 Prime Serangoon North            Blk 54…  552542 32239. 39519. Branch        0\n6 Singapore Pools Woodlands Centre 1A Woo…  731001 21012. 46987. Branch        3\n# … with abbreviated variable names ¹​POSTCODE, ²​`OUTLET TYPE`,\n#   ³​`Gp1Gp2 Winnings`\n\n\n\nsgpools_sf <- st_as_sf(sgpools, coords = c(\"XCOORD\", \"YCOORD\"),\n                       crs=3414) # 3414 makes tmap know which projection we are using. Coordinate Reference SyStem.\n\n\n # to create an interactive viewing mode\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(sgpools_sf)+\n  tm_bubbles(col=\"red\",\n             size=1,\n             border.col=\"black\",\n             border.lwd=1\n               )\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "pacman::p_load(corrplot, ggstatsplot, tidyverse)\n\n\nwine <- read_csv(\"data/wine_quality.csv\") \n\nRows: 6497 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): type\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\npairs(wine[,1:11])\n\n\n\n\n\nggstatsplot::ggcorrmat(\n  data=wine,\n  cor.vars = 1:11\n)\n\n\n\n\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title    = \"Correlogram for wine dataset\",\n  subtitle = \"Four pairs are no significant at p < 0.05\"\n)\n\n\n\n\n\nwine.cor <- cor(wine[, 1:11])\n\n\ncorrplot(wine.cor)\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\",\n         diag = FALSE,\n         tl.col = \"black\")\n\n\n\n\n\npacman::p_load(ggtern, plotly, tidyverse)\n\n\npop_data <- read_csv(\"data/respopagsex2000to2018_tidy.csv\")\n\nRows: 108126 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): PA, SZ, AG\ndbl (2): Year, Population\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nagpop_mutated <- pop_data %>%\n  mutate(`Year` = as.character(Year))%>%\n  spread(AG, Population) %>%\n  mutate(YOUNG = rowSums(.[4:8]))%>%\n  mutate(ACTIVE = rowSums(.[9:16]))  %>%\n  mutate(OLD = rowSums(.[17:21])) %>%\n  mutate(TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018)%>%\n  filter(TOTAL > 0)\n\n\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\nlabel <- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\naxis <- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes <- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %>%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )\n\nNo scatterternary mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -> https://plotly.com/r/reference/#scatter-mode\n\n\n\n\n\n\n\npacman::p_load(seriation, dendextend, heatmaply, tidyverse)\n\n\nwh <- read_csv(\"data/WHData-2018.csv\")\n\nRows: 156 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): Country, Region\ndbl (10): Happiness score, Whisker-high, Whisker-low, Dystopia, GDP per capi...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nrow.names(wh) <- wh$Country\n\nWarning: Setting row names on a tibble is deprecated.\n\n\n\nwh1 <- dplyr::select(wh, c(3, 7:12))\nwh_matrix <- data.matrix(wh)\n\n\nwh_heatmap <- heatmap(wh_matrix,\n                      scale=\"column\",\n                      cexRow = 0.6, \n                      cexCol = 0.8,\n                      margins = c(10, 4))\n\n\n\n\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)],\n          scale = \"column\")\n\n\n\n\n\n\nheatmaply(percentize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\")\n\n\n\n\n\n\nwh_d <- dist(normalize(wh_matrix[, -c(1, 2, 4, 5)]), method = \"euclidean\")\ndend_expend(wh_d)[[3]]\n\n  dist_methods hclust_methods     optim\n1      unknown         ward.D 0.6137851\n2      unknown        ward.D2 0.6289186\n3      unknown         single 0.4774362\n4      unknown       complete 0.6434009\n5      unknown        average 0.6701688\n6      unknown       mcquitty 0.5020102\n7      unknown         median 0.5901833\n8      unknown       centroid 0.6338734\n\n\n\nwh_clust <- hclust(wh_d, method = \"average\")\nnum_k <- find_k(wh_clust)\nplot(num_k)\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )\n\n\n\n\n\n\npacman::p_load(GGally, parallelPlot, tidyverse)\n\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Parallel Coordinates Plot of World Happines Variables\")\n\nWarning: The following aesthetics were dropped during statistical transformation: colour\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region)\n\n\n\n\n\nwh <- wh %>%\n  select(\"Happiness score\", c(7:12))\nparallelPlot(wh,\n             width = 320,\n             height = 250)\n\n\n\n\n\n\nhistoVisibility <- rep(TRUE, ncol(wh))\nparallelPlot(wh,\n             rotateTitle = TRUE,\n             histoVisibility = histoVisibility)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "title": "Hands-on_Ex08",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph, visNetwork, lubridate, clock, tidyverse, graphlayouts)\n\n\nGAStech_nodes <- read_csv(\"data/GAStech_email_node.csv\")\n\nRows: 54 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): label, Department, Title\ndbl (1): id\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nGAStech_edges <- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\nRows: 9063 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): SentDate, Subject, MainSubject, sourceLabel, targetLabel\ndbl  (2): source, target\ntime (1): SentTime\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n    summarise(Weight = n()) %>%\n  filter(source!=target) %>%\n  filter(Weight > 1) %>%\n  ungroup()\n\n`summarise()` has grouped output by 'source', 'target'. You can override using\nthe `.groups` argument.\n\n\n\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n\n\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Node Data: 54 × 4 (active)\n     id label               Department     Title                                \n  <dbl> <chr>               <chr>          <chr>                                \n1     1 Mat.Bramar          Administration Assistant to CEO                     \n2     2 Anda.Ribera         Administration Assistant to CFO                     \n3     3 Rachel.Pantanal     Administration Assistant to CIO                     \n4     4 Linda.Lagos         Administration Assistant to COO                     \n5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Manag…\n6     6 Carla.Forluniau     Administration Assistant to IT Group Manager        \n# … with 48 more rows\n#\n# Edge Data: 1,372 × 4\n   from    to Weekday Weight\n  <int> <int> <ord>    <int>\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# … with 1,369 more rows\n\n\n\nGAStech_graph %>%\n  activate(edges) %>%\n  arrange(desc(Weight))\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Edge Data: 1,372 × 4 (active)\n   from    to Weekday  Weight\n  <int> <int> <ord>     <int>\n1    40    41 Saturday     13\n2    41    43 Monday       11\n3    35    31 Tuesday      10\n4    40    41 Monday       10\n5    40    43 Monday       10\n6    36    32 Sunday        9\n# … with 1,366 more rows\n#\n# Node Data: 54 × 4\n     id label           Department     Title           \n  <dbl> <chr>           <chr>          <chr>           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# … with 51 more rows\n\n\n\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\nUsing \"stress\" as default layout\n\n\nWarning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` in the `default_aes` field and elsewhere instead.\n\n\n\n\n\n\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\nUsing \"stress\" as default layout\n\ng + theme_graph()\n\n\n\n\n\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\nUsing \"stress\" as default layout\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not\nfound in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not\nfound in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\ng <- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2) +\n  theme(legend.position = 'bottom')\n  \ng + facet_edges(~Weekday)\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not\nfound in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\nset_graph_style() \n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\ng <- GAStech_graph %>%\n  mutate(community = as.factor(group_edge_betweenness(weights = Weight, directed = TRUE))) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = community))  \n\nWarning in cluster_edge_betweenness(graph = .G(), weights = weights, directed =\ndirected): At core/community/edge_betweenness.c:492 : Membership vector will be\nselected based on the highest modularity score.\n\n\nWarning in cluster_edge_betweenness(graph = .G(), weights = weights, directed\n= directed): At core/community/edge_betweenness.c:497 : Modularity calculation\nwith weighted edge betweenness community detection might not make sense --\nmodularity treats edge weights as similarities while edge betwenness treats them\nas distances.\n\ng + theme_graph()\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %>%\n  rename(from = id) %>%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %>%\n  rename(to = id) %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(from, to) %>%\n    summarise(weight = n()) %>%\n  filter(from!=to) %>%\n  filter(weight > 1) %>%\n  ungroup()\n\n`summarise()` has grouped output by 'from'. You can override using the\n`.groups` argument.\n\n\n\nvisNetwork(GAStech_nodes, \n           GAStech_edges_aggregated)\n\n\n\n\n\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") \n\n\n\n\n\n\nGAStech_nodes <- GAStech_nodes %>%\n  rename(group = Department) \n\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  }
]